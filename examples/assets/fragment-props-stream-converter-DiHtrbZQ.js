var R=Object.defineProperty;var F=(I,o,e)=>o in I?R(I,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):I[o]=e;var a=(I,o,e)=>(F(I,typeof o!="symbol"?o+"":o,e),e);import{X as L,U as u,aq as A,aJ as P,aK as T,aL as y,aM as _,aN as O,aO as v,aP as D,aQ as G,aR as N,aS as U,aT as M,aU as B,aV as $}from"./index-DOCiYP8C.js";class x extends L{constructor(){super(...arguments);a(this,"onPropertiesStreamed",new u);a(this,"onProgress",new u);a(this,"onIndicesStreamed",new u);a(this,"onDisposed",new u);a(this,"enabled",!0);a(this,"settings",new A);a(this,"_webIfc",new P)}get(){return this._webIfc}async dispose(){this.onIndicesStreamed.reset(),this.onPropertiesStreamed.reset(),this._webIfc=null,this.onDisposed.reset()}async streamFromBuffer(e){const t=performance.now();await this.readIfcFile(e),await this.streamAllProperties(),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-t} ms!`)}async streamFromCallBack(e){const t=performance.now();await this.streamIfcFile(e),await this.streamAllProperties(),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-t} ms!`)}async readIfcFile(e){const{path:t,absolute:n,logLevel:s}=this.settings.wasm;this._webIfc.SetWasmPath(t,n),await this._webIfc.Init(),s&&this._webIfc.SetLogLevel(s),this._webIfc.OpenModel(e,this.settings.webIfc)}async streamIfcFile(e){const{path:t,absolute:n,logLevel:s}=this.settings.wasm;this._webIfc.SetWasmPath(t,n),await this._webIfc.Init(),s&&this._webIfc.SetLogLevel(s),this._webIfc.OpenModelFromCallback(e,this.settings.webIfc)}async streamAllProperties(){const{propertiesSize:e}=this.settings,t=new Set(this._webIfc.GetIfcEntityList(0)),n=[y,_,O,v,D,G],s=new Map,f=new Set([N,U,M,B,$]);for(const i of f)t.add(i);let r=.01,d=0;for(const i of t){if(d++,T.has(i))continue;const S=f.has(i),p=this._webIfc.GetLineIDsWithType(0,i),b=p.size();let C=0;for(let g=0;g<b-e;g+=e){const w={};for(let l=0;l<e;l++){C++;const c=p.get(g+l);try{const m=this._webIfc.GetLine(0,c,S);n.includes(i)&&this.getIndices(m,c,s),w[m.expressID]=m}catch{console.log(`Could not get property: ${c}`)}}await this.onPropertiesStreamed.trigger({type:i,data:w})}if(C!==b){const g={};for(let w=C;w<b;w++){const l=p.get(w);try{const c=this._webIfc.GetLine(0,l,S);n.includes(i)&&this.getIndices(c,l,s),g[c.expressID]=c}catch{console.log(`Could not get property: ${l}`)}}await this.onPropertiesStreamed.trigger({type:i,data:g})}const E=d/t.size;E>r&&(r+=.01,r=Math.max(r,E),await this.onProgress.trigger(Math.round(r*100)/100))}const h=[];for(const[i,S]of s)h.push([i,...S]);await this.onIndicesStreamed.trigger(h)}getIndices(e,t,n){const s=e.RelatedObjects||e.RelatedElements;if(!s){console.log(`Related objects not found: ${t}`);return}const f=e.RelatingType||e.RelatingMaterial||e.RelatingStructure||e.RelatingPropertyDefinition||e.RelatingGroup||e.RelatingClassification;if(!f){console.log(`Relating object not found: ${t}`);return}if(!Array.isArray(s)||f.value===void 0)return;const r=f.value;for(const d of s){if(d.value===void 0||d.value===null)continue;const h=d.value;n.has(h)||n.set(h,new Set),n.get(h).add(r)}}cleanUp(){this._webIfc=null,this._webIfc=new P}}a(x,"uuid","88d2c89c-ce32-47d7-8cb6-d51e4b311a0b");export{x as F};
